// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Blogs_User{
  id Int @id @default(autoincrement())
  email String @unique
  password String
  username String?
  posts Blogs_Post[]
  role Role @default(User)
  comments Blogs_Comment[]
  created_at DateTime @default(now())
}

enum Role{
  User
  Admin
}

model Blogs_Post{
  id Int @id @default(autoincrement())
  author_id Int
  author Blogs_User @relation(fields: [author_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  title String
  content String
  comments Blogs_Comment[]
  is_published Boolean @default(false)
  created_at DateTime @default(now())
  last_edited DateTime @updatedAt
}

model Blogs_Comment{
  id Int @id @default(autoincrement())
  post_id Int
  post Blogs_Post @relation(fields: [post_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  user_id Int
  user Blogs_User @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  comment String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}